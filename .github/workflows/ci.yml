name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Run ESLint
        run: cd backend && npm run lint

      - name: Clean up coverage files
        run: cd backend && rm -rf coverage

      - name: Check code formatting
        run: cd backend && npm run format:check

      - name: Run tests
        run: cd backend && npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/blogdb_test
          JWT_SECRET: test_jwt_secret_key_for_ci_cd_pipeline
          JWT_EXPIRES_IN: 1h

      - name: Run security audit
        run: cd backend && npm audit --audit-level=moderate

      - name: Build verification
        run: cd backend && npm run build:check

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            backend/coverage/
            test-results/
          retention-days: 7

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Run security scan
        run: cd backend && npm audit --audit-level=high

      - name: Check for known vulnerabilities
        run: cd backend && npm audit --audit-level=critical

  code-quality:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Clean up coverage files
        run: cd backend && rm -rf coverage

      - name: Run code quality checks
        run: |
          cd backend && npm run lint
          cd backend && npm run format:check
